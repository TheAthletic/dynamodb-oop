2.0.2
- support for delete attribute in transaction() update() and insert_or_update()
- console.warn every time schema is not provided and a describeTable is called ( 3.x.x will throw err instead of calling describeTable )
- moved testing from Travis to Github Actions
- fix describeTable()
- fix ProvisionedThroughput in sql 'DESCRIBE TABLE tbl_name' ( updated @awspilot/dynamodb-sql-util)
- fix 'DESCRIBE TABLE tbl_name' when AWS does not return BillingModeSummary
- updated (dev)dependencies
2.0.0
- removed npm-shrinkwrap, was causing npm install to also install dev dependencies ( npm bug ?)
- aws-sdk as peer dependency ( shrinks deply size for environments with embedded aws-sdk eg. Lambda )
- experimental transactWrite support
1.5.1
- import only dynamodb from aws-sdk
1.5.0
- wrap around batchGetItem - .batch().table().get().get().read()
- wrap around batchWriteItem - .batch().table().put().del().write()
1.4.0
- wrap around batchWriteItem - .batch().table().put().put().del().write()
1.3.0
- 1.2.0+ will follow SemVer (major.minor.patch) and increment "minor" for new features
- JSON keys in SQL can now be keywords without the need of wrapping: eg. { "keyword": 1 } can now be just { keyword: 1 }
1.2.11
- SQL LIST and MAP support nested StringSet, NumberSet, BinarySet and Binary
- SQL support insert/update BinarySet data type (BS) using Buffer.from( <STRING>, 'base64')
- SQL support insert/update binary data type (B) using Buffer.from( <STRING>, 'base64')
1.2.10
- SQL support for CREATE TABLE
- pass an Array as parameter to select eg. .select(['attr1','attr2'])
1.2.9
- SQL support for DROP TABLE
- SQL support for DROP INDEX index_name ON tbl_name
- updated SQL parser to support keywords in attribute names, table names and index names (eg: WHERE where = 5)
1.2.8

1.2.7
- fixes a HUGE bug where float numbers may lose decimals in OOP .query(), SQL .query() do not have this bug
1.2.6
- schema() : new method to supply primary key definitions for tables to avoid unnecesary describeTable calls
1.2.5
- support for basic expressions that ca be resolved in place, eg. new Date().getTime() - 1000*60*60*24
1.2.4
- tests for empty strings + fix .query() and .scan()
1.2.3
- parse / stringify - configurable handling for empty strings, StringSet and NumberSet
- support for Math javascript object in SQL statements
1.2.2
- support for SELECT ( without HAVING )
1.2.1
- basic support for SCAN sql
1.2.0
- dynalite removed from dev dependencies
1.1.8
- RawFilterExpression, RawProjectionExpression
- tests for new Set()
1.1.7
- support for new Date() in SQL
- sql tests
