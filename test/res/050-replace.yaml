Prepare:
    Data: []
Tests:
    query:
        - title: REPLACE INTO tbl_name SET `hash` = ...inexistent hash...
          query:
            |
            REPLACE INTO
                `test_hash_range`
            SET
                `hash`     =  'replace-inexistent-hash',
                `range`    =  1,

                `string`  = 'text',
                `number`  = 1,
                `boolean` = true,
                `array`   = ['a',1,true,null],
                `object`  = {
                    'string': 'text',
                    'number': 1,
                    'bool'  : true,
                    'null'  : null,
                },
                `null`    = null
          dataItem:
              table: test_hash_range
              item: { hash: 'replace-inexistent-hash',  range: 1 }
          validations:
              - key: dataItem.string
                value: "'text'"
              - key: dataItem.number
                value: 1
              - key: dataItem.boolean
                value: true
              - key: dataItem.null
                value: "null"
              - key: dataItem.array
                value: ['a',1,true,null]
              - key: dataItem.object
                value: {  string: 'text', number: 1, bool  : true, null  : null,  }

        # test stringset, numberset
        - title: "REPLACE INTO tbl_name SET `hash` = <STRING>, ss = new StringSet(..), ns = new NumberSet(...) "
          query:
              |
              REPLACE INTO
                  test_hash_range
              SET
                  `hash` = 'replace-inexistent-hash',
                  `range` = 1,
                  ss = new StringSet(['a','b','c']),
                  ns = new NumberSet([1,2,3])

          dataItem:
              table: test_hash_range
              item: { hash: 'replace-inexistent-hash',  range: 1 }
          validations:
               - key: Object.keys(dataItem).length
                 value: 4

               - key: dataItem.ss
                 value: ['a','b','c']
               - key: dataItem.ns
                 value: [1,2,3]
          log: false





        - title: "REPLACE INTO tbl_name SET `hash` = <STRING>, d = new Date('2018-07-05T07:50:15.416Z').getTime() "
          query:
              |
              REPLACE INTO
                  test_hash_range
              SET
                  `hash` = 'replace-inexistent-hash',
                  `range` = 1,
                  d = new Date('2018-07-05T07:50:15.416Z').getTime(),
                  m = Math.round( 7.4 + 2.7 )

          dataItem:
              table: test_hash_range
              item: { hash: 'replace-inexistent-hash',  range: 1 }
          validations:
               - key: Object.keys(dataItem).length
                 value: 4
               - key: dataItem.d
                 value: 1530777015416
               - key: dataItem.m
                 value: 10
          log: false


        - title: "REPLACE INTO tbl_name SET `hash` = <STRING>, uniqid = uuid('acct-###########') "
          query:
              |
              REPLACE INTO
                  test_hash_range
              SET
                  `hash` = 'replace-inexistent-hash',
                  `range` = 3 - 2,
                  uniqid = uuid('acct-###########')


          dataItem:
              table: test_hash_range
              item: { hash: 'replace-inexistent-hash',  range: 1 }
          validations:
              - key: dataItem.uniqid.length
                value: 16
              - key: "dataItem.uniqid.substr(0,5)"
                value: "'acct-'"
          log: false



        - title: REPLACE INTO tbl_name SET buffer = Buffer.from( <STRING> ,'base64')
          query:
            |
            REPLACE INTO
                `test_hash_range`
            SET
                hash     =  'replace-buffer',
                range    =  1,
                buffer   = Buffer.from( "4oyb77iPIGhvdXJnbGFzcy4g8J+VkCBjbG9jay4g4oyaIHdhdGNoLg==", 'base64' )
          dataItem:
              table: test_hash_range
              item: { hash: 'replace-buffer',  range: 1 }
          validations:
              - key: "dataItem.buffer.toString('utf-8')"
                value: "'‚åõÔ∏è hourglass. üïê clock. ‚åö watch.'"
          log: false
